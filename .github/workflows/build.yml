# yamllint disable rule:line-length
# inspired from https://github.com/Poeschl/Hassio-Addons
---
name: Builder

env:
  BUILD_ARGS: ""

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type (dev)'
        default: 'dev'
        required: true

jobs:
  check-addon-changes:
    runs-on: ubuntu-latest
    outputs:
      addons: ${{ env.ADDON_LIST }}
      archs: ${{ env.ARCH_LIST }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: Determine addon
        id: determine_addon
        run: |
          echo "ADDON_LIST=['rfxcom2mqtt-dev']" >> $GITHUB_ENV
      - name: Determine arch
        id: determine_arch
        run: |
          ARCH_LIST=$(jq -r -c '.arch' ./rfxcom2mqtt-dev/config.json)
          echo "Found the following arches: $ARCH_LIST"
          echo "ARCH_LIST=$ARCH_LIST" >> $GITHUB_ENV
  lint_config:
    if: ${{ needs.check-addon-changes.outputs.addons != '[]' }}
    needs: check-addon-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.addons) }}
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v4
      - name: 🔎 Run Home Assistant Add-on Lint
        uses: frenck/action-addon-linter@v2
        with:
          path: "./${{ matrix.addon }}"

  build:
    if: ${{ needs.check-addon-changes.outputs.addons != '[]' }}
    needs: [check-addon-changes]
    runs-on: ubuntu-latest
    environment: CR_PAT
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJSON(needs.check-addon-changes.outputs.addons) }}
        arch: ${{ fromJSON(needs.check-addon-changes.outputs.archs) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        env:
          HEAD: "${{ github.head_ref }}"
        run: |
          # shellcheck disable=SC2157,SC2086 
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             # shellcheck disable=SC2129
             echo "build_arch=true" >> $GITHUB_OUTPUT;
             # shellcheck disable=SC2129
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
             if [[ -z "$HEAD" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 # shellcheck disable=SC2129
                 echo "BUILD_ARGS=" >> $GITHUB_ENV;
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
             # shellcheck disable=SC2129
             echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi
      - name: Login to GitHub Container Registry
        if: env.BUILD_ARGS != '--test'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: prepare Build
        run: |
          cp -R build/rootfs ${{ matrix.addon }}
          cp build/Dockerfile ${{ matrix.addon }}
          cp build/build.yaml ${{ matrix.addon }}
      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@master
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --no-latest \
            --image "hassio-addon" \
            --docker-hub "rfxcom2mqtt" \
            --addon
